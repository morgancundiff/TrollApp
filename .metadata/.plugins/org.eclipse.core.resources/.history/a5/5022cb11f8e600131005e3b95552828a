package edu.ucsd.troll.app;

/**
 * Created by shalomabitan on 5/28/14.
 */

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;


/**
 * This class will display the menu for
 * a specific location. it will use
 * ListView and AsyncTask to make the appropriate
 * API calls
 */
public class LocationMenuActivity extends ListActivity {

    private ProgressDialog pDialog;

    // URL to get menu JSON
    private static String url = "http://troll.everythingcoed.com/get/menu/1/sort/rating?api_key=OlDwjUX0fQSm0vAy2D3fy4uCZ108bx5N";

    // JSON Node names
    private static final String TAG_MENU = "menu";
    private static final String TAG_ID = "id";
    private static final String TAG_TITLE = "title";
    private static final String TAG_DESCRIPTION = "description";
    private static final String TAG_CATEGORY = "category";
    private static final String TAG_RATING = "rating";
    private static final String TAG_SIZES = "sizes";
    private static final String TAG_SIZE = "size";
    private static final String TAG_PRICE = "price";
    //private static final String TAG_PHONE_OFFICE = "office";

    // menu JSONArray
    JSONArray menu = null;

    // Hashmap for ListView
    ArrayList<HashMap<String, String>> menuList;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.location_menu_layout);

        menuList = new ArrayList<HashMap<String, String>>();

        ListView lv = getListView();

        // Listview on item click listener
        lv.setOnItemClickListener(new OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view,
                                    int position, long id) {
                // getting values from selected ListItem
                String title = ((TextView) view.findViewById(R.id.title))
                        .getText().toString();
                String rating = ((TextView) view.findViewById(R.id.rating))
                        .getText().toString();
                String category = ((TextView) view.findViewById(R.id.category))
                        .getText().toString();

                // Starting single contact activity
                Intent in = new Intent(getApplicationContext(),
                        SingleMenuItemActivity.class);
                in.putExtra(TAG_TITLE, title);
                in.putExtra(TAG_RATING, rating);
                in.putExtra(TAG_SIZE, category);
                startActivity(in);

            }
        });

        // Calling async task to get json
        new GetMenu().execute();
    }

    /**
     * Async task class to get json by making HTTP call
     * */
    private class GetMenu extends AsyncTask<Void, Void, Void> {

        HashMap<String, String> singleMenu = new HashMap<String, String>();

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            // Showing progress dialog
            pDialog = new ProgressDialog(LocationMenuActivity.this);
            pDialog.setMessage("Please wait...");
            pDialog.setCancelable(false);
            pDialog.show();

        }

        @Override
        protected Void doInBackground(Void... arg0) {
            // Creating service handler class instance
            APIServiceHandler sh = new APIServiceHandler();

            // Making a request to url and getting response
            String jsonStr = sh.makeServiceCall(url, APIServiceHandler.GET);

            Log.d("Response: ", "> " + jsonStr);

            if (jsonStr != null) {
                try {
                    JSONObject jsonObj = new JSONObject(jsonStr);

                    Log.d("Response: ", "=> " + jsonObj);

                    // Getting JSON Array node
                    menu = jsonObj.getJSONArray(TAG_MENU);

                    // looping through All Contacts
                    for (int i = 0; i < menu.length(); i++) {
                        JSONObject c = menu.getJSONObject(i);

                        String id = c.getString(TAG_ID);
                        Log.d("ID: ", "=> " + id);
                        String title = c.getString(TAG_TITLE);
                        Log.d("TITLE: ", "=> " + title);
                        String email = c.getString(TAG_DESCRIPTION);
                        Log.d("DESCRIPTION: ", "=> " + email);
                        String category = c.getString(TAG_CATEGORY);
                        Log.d("CATEGORY: ", "=> " + category);
                        String rating = c.getString(TAG_RATING);
                        Log.d("RATING: ", "=> " + rating);

                        // Phone node is JSON Object
                        //JSONArray sizes = c.getJSONArray(TAG_SIZES);
                        // Log.d("SIZES: ", "=> " + sizes);
                        //String size = sizes.getString(TAG_SIZE);
                        // Log.d("SIZE: ", "=> " + size);
                        //String price = sizes.getString(TAG_PRICE);
                        //Log.d("PRICE: ", "=> " + price);
                        //String office = phone.getString(TAG_PHONE_OFFICE);

                        // tmp hashmap for single contact
                        HashMap<String, String> contact = new HashMap<String, String>();

                        // adding each child node to HashMap key => value
                        //contact.put(TAG_ID, id);
                        contact.put(TAG_TITLE, title);
                        contact.put(TAG_CATEGORY, category);
                        contact.put(TAG_RATING, rating);

                        // adding contact to contact list
                        menuList.add(contact);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            } else {
                Log.e("ServiceHandler", "Couldn't get any data from the url");
            }

            return null;
        }

        @Override
        protected void onPostExecute(Void result) {
            super.onPostExecute(result);
            // Dismiss the progress dialog
            if (pDialog.isShowing())
                pDialog.dismiss();
            /**
             * Updating parsed JSON data into ListView
             * */
            ListAdapter adapter = new SimpleAdapter(
                    LocationMenuActivity.this, menuList,
                    R.layout.location_menu_list, new String[] {TAG_TITLE, TAG_DESCRIPTION,
                    TAG_SIZE}, new int[] { R.id.title,
                    R.id.rating, R.id.category });

            setListAdapter(adapter);
        }

    }

}
